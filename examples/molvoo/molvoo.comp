#version 450

layout (push_constant) uniform ComputeUniform {
  float timeStep;
  uint numAtoms;
  uint pickIndex;
} u;

struct Atom {
  vec3 pos;
  float radius;
  vec3 colour;
  float mass;
  vec3 velocity;
  int pad;
  vec3 acceleration;
  int pad2;
};

layout(std430, binding=0) buffer Atoms {
  Atom atoms[];
} a;

struct Pick {
  vec3 rayStart;
  uint atom;
  vec3 rayDir;
  uint found;
};

layout(std430, binding=2) buffer Picks {
  Pick picks[];
} pick;

layout (local_size_x = 64) in;

void main() {
  uint id = gl_GlobalInvocationID.x;
  a.atoms[id].pos += a.atoms[id].velocity * u.timeStep;
  if (id == 0) {
    pick.picks[u.pickIndex].atom++;
  }
}
